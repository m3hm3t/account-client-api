// Code generated by MockGen. DO NOT EDIT.
// Source: post.go

// Package mock_poster is a generated GoMock package.
package test

import (
	"github.com/golang/mock/gomock"
	"reflect"
)

// MockRestPoster is a mock of RestPoster interface
type MockRestPoster struct {
	ctrl     *gomock.Controller
	recorder *MockRestPosterMockRecorder
}

// MockRestPosterMockRecorder is the mock recorder for MockRestPoster
type MockRestPosterMockRecorder struct {
	mock *MockRestPoster
}

// NewMockRestPoster creates a new mock instance
func NewMockRestPoster(ctrl *gomock.Controller) *MockRestPoster {
	mock := &MockRestPoster{ctrl: ctrl}
	mock.recorder = &MockRestPosterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRestPoster) EXPECT() *MockRestPosterMockRecorder {
	return m.recorder
}

// MakePostRequest mocks base method
func (m *MockRestPoster) MakePostRequest(url string, input interface{}) ([]byte, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakePostRequest", url, input)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// MakePostRequest indicates an expected call of MakePostRequest
func (mr *MockRestPosterMockRecorder) MakePostRequest(url, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakePostRequest", reflect.TypeOf((*MockRestPoster)(nil).MakePostRequest), url, input)
}
